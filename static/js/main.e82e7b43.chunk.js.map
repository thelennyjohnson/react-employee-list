{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["Table","props","characterData","removeCharacter","Form","initialState","name","job","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","onClick","Component","App","characters","index","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNA6CeA,EAbD,SAACC,GAC4BA,EAAlCC,cAAkCD,EAAnBE,iB,OCwBTC,E,4MAtDbC,aAAe,CACbC,KAAM,GACNC,IAAM,I,EAGRC,MAAQ,EAAKH,a,EAEbI,aAAe,SAACC,GAAU,MAIFA,EAAMC,OAArBL,EAJiB,EAIjBA,KAAMM,EAJW,EAIXA,MAEb,EAAKC,SAAL,eACGP,EAAQM,K,EAIbE,WAAa,WACX,EAAKb,MAAMc,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKR,e,uDAGZ,IAAD,EACcW,KAAKR,MAAlBF,EADD,EACCA,KAAMC,EADP,EACOA,IAEb,OACE,8BACE,2BAAOU,QAAQ,QAAf,QACA,2BACEC,KAAK,OACLZ,KAAK,OACLa,GAAG,OACHP,MAAON,EACPc,SAAUJ,KAAKP,eAEjB,2BAAOQ,QAAQ,OAAf,OACA,2BACEC,KAAK,OACLZ,KAAK,MACLa,GAAG,MACHP,MAAOL,EACPa,SAAUJ,KAAKP,eAEjB,2BACES,KAAK,SACLN,MAAM,SACNS,QAASL,KAAKF,kB,GAhDLQ,aCsCJC,E,4MAlCbf,MAAQ,CACNgB,WAAa,I,EAKfrB,gBAAkB,SAACsB,GAAW,IACrBD,EAAc,EAAKhB,MAAnBgB,WAEP,EAAKX,SAAS,CACZW,WAAYA,EAAWE,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMH,Q,EAKnBV,aAAe,SAACY,GACd,EAAKd,SAAS,CAACW,WAAW,GAAD,mBAAM,EAAKhB,MAAMgB,YAAjB,CAA6BG,O,uDAG/C,IACAH,EAAcR,KAAKR,MAAnBgB,WAEP,OACE,yBAAKK,UAAU,aACb,kBAAC,EAAD,CAAO3B,cAAesB,EAAYrB,gBAAiBa,KAAKb,kBACxD,kBAAC,EAAD,CAAMY,aAAcC,KAAKD,oB,GA5BfO,a,MCElBQ,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.e82e7b43.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n        <th>Remove</th>\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return (\r\n  <tbody>{rows}</tbody>\r\n  )\r\n}\r\n \r\nconst Table = (props) => {\r\n  const {characterData, removeCharacter} = props\r\n\r\n return (\r\n    // same thing as this.props.characterData\r\n   \r\n      <table>\r\n        <TableHeader/>\r\n        <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n      </table>\r\n    ) \r\n  }\r\n\r\nexport default Table;","import React, {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n  initialState = {\r\n    name: '',\r\n    job : '',\r\n  }\r\n\r\n  state = this.initialState\r\n\r\n  handleChange = (event) => {\r\n\r\n    // with the {name, value} decalration what's happening is assigning\r\n    // name and value will now be  event.target.name and event.target.value\r\n    const {name, value} = event.target\r\n\r\n    this.setState({\r\n      [name] : value,\r\n    })\r\n  }\r\n\r\n  submitForm = () =>{\r\n    this.props.handleSubmit(this.state)\r\n    this.setState(this.initialState)\r\n  }\r\n\r\n  render(){\r\n    const {name, job} = this.state;\r\n\r\n    return (\r\n      <form>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor=\"job\">Job</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          id=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange}\r\n        />\r\n        <input \r\n          type=\"button\"\r\n          value=\"Submit\"\r\n          onClick={this.submitForm}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n\r\n","import React, {Component} from 'react';\r\nimport Table from './Table'\r\nimport Form from './Form'\r\n\r\nclass App extends Component{\r\n\r\n  state = {\r\n    characters : []\r\n  }\r\n\r\n\r\n  // check whether the key matches index in which case remove from array\r\n  removeCharacter = (index) => {\r\n    const {characters} = this.state;\r\n\r\n    this.setState({\r\n      characters: characters.filter((character, i) =>{\r\n        return i !== index\r\n      })\r\n    })\r\n  }\r\n\r\n  handleSubmit = (character) => {\r\n    this.setState({characters: [...this.state.characters, character]})\r\n  }\r\n\r\n  render(){\r\n    const {characters} = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Table characterData={characters} removeCharacter={this.removeCharacter}/>\r\n        <Form handleSubmit={this.handleSubmit}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}